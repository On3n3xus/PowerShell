# Import the Active Directory module for the Get-ADUser cmdlet
Import-Module ActiveDirectory

# Specify the file containing the email addresses
$EmailAddressesFile = "C:\\PowershellScript\\EmailAddresses.txt"

# Specify the output CSV file
$OutputFile = "C:\\PowershellScript\\ProxyAddresses.csv"

# Read the email addresses from the file
$EmailAddresses = Get-Content $EmailAddressesFile

# Create an empty array to hold the output data
$OutputData = @()

# Loop through each email address
foreach ($EmailAddress in $EmailAddresses) {
    # Get the user with the specified email address
    $User = Get-ADUser -Filter "proxyAddresses -like 'SMTP:*$($EmailAddress)*'" -Properties proxyAddresses, SamAccountName

    # Check if the user was found
    if ($User -ne $null) {
        # Create a custom object to hold the output data for this user
        $UserData = New-Object PSObject -Property @{
            EmailAddress = $EmailAddress
            Username = $User.SamAccountName
        }

        # Get the SMTP addresses
        $SmtpAddresses = $User.proxyAddresses | Where-Object { $_ -like "SMTP:*" }

        # Add the SMTP addresses to the custom object
        for ($i = 0; $i -lt $SmtpAddresses.Count; $i++) {
            $UserData | Add-Member -MemberType NoteProperty -Name "SMTPAddress$($i + 1)" -Value $SmtpAddresses[$i]
        }

        # Add the custom object to the output data
        $OutputData += $UserData
    } else {
        # Output a message indicating that the user was not found
        Write-Output "User with email address ${EmailAddress} not found"
    }
}

# Export the output data to the CSV file
$OutputData | Export-Csv $OutputFile -NoTypeInformation
